import cv2
import os
import requests
import threading



#Classifiers

face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_alt.xml') 
eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml') 

def senti(lff):
        threading.Timer(5.0,senti).start()
        print("NUMBER",lff)
        contents = requests.get("http://localhost:2000/drive/update/5d60e0792e4e6330e02f1791/.lff")



        

cap=cv2.VideoCapture(0)

while True:
        for i in range(5):
            print(i)
            ret, img=cap.read()
            gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
            
            faces = face_cascade.detectMultiScale(gray, scaleFactor =1.1, minNeighbors = 5)

            for (x,y,w,h) in faces: 
                cv2.rectangle(img,(x,y),(x+w,y+h),(0,255,0),4)
                roi_gray = gray[y:y+h, x:x+w]   
                roi_color = img[y:y+h, x:x+w]         
                eyes = eye_cascade.detectMultiScale(roi_gray)        
                for (ex,ey,ew,eh) in eyes: 
                    cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,175,255),2)
                    

            cv2.imshow('img',img)
            
            lff=len(faces)
            
            senti(lff)
            #print("Number ",lff)
            


                
            k=cv2.waitKey(1) & 0xff
            
            if k == 32:  #esc key pressed
                break


cap.release()
out.release()
cv2.destroyAllWindows()  




    

    

    
 
        

    
